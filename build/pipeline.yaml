apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: dotnet-app-deploy
spec:
  params:
  - name: git-head-commit
    type: string
  - name: git-head-message
    type: string
  resources:
  - name: git-repository
    type: git
  tasks:
  - name: build-from-git
    taskRef:
      name: build-from-git
    conditions:
      - conditionRef: should-deploy-branch
        params:
          - name: branch-name
            value: master
    resources:
      inputs:
        - name: git-repository
          resource: git-repository
    params:
      - name: git-head-commit
        value: $(params.git-head-commit)
      - name: git-head-message
        value: $(params.git-head-message)
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-from-git
spec:  
  inputs:
    # params:
    resources:
    - name: git-repository
      type: git
      targetPath: .
    params:
    - name: git-head-commit
      type: string
      default: 'noop'
    - name: git-head-message
      type: string
      default: 'none'
    - name: oc-cli-image
      type: string
      default: 'quay.io/openshift/origin-cli:4.2.0'
  
  steps:

    - name: git-checkout
      image: quay.io/openshift-pipeline/tektoncd-pipeline-git-init:latest
      command: ["bash", "-c", "echo $(inputs.params.git-head-commit): $(inputs.params.git-head-message)"] 

    - name: dot-net-build
      image: registry.redhat.io/dotnet/dotnet-31-rhel7
      command: ["bash", "-c"]
      args: 
        - |-
          echo ".net version $(dotnet --version)"          
          mkdir publish          
          dotnet publish ./src/TimeApi/TimeApi.csproj -o ./publish
          echo $(ls ./publish)
---
apiVersion: tekton.dev/v1alpha1
kind: Condition
metadata:
  name: should-deploy-branch
spec:
  params:
    - name: branch-name
  check:
    image: 'quay.io/openshift/origin-cli:4.2.0' 
    command: ["bash", "-c"]
    args: ['test $(params.branch-name) = "master"']

